<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tree</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_dist=(x-sb_p1.x)/50;
y_dist=(y-sb_p1.y)/50;
image_angle=random(360);
size=.7-(random(3)/10);
//mySpeed=0;
direction=90;
speed=0;

{
  do
  {
    x = random(room_width);
  }
  until (place_free(x,y))
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_dist1=(x-sb_p1.x)/50;
y_dist1=(y-sb_p1.y)/50;
x_dist=x_dist1;
y_dist=y_dist1;
//if sb_p1.y&gt;self.y then {depth-=y;} else {depth=0;}
//if sb_p1.y&lt;self.y then {depth-=y;}
depth=distance_to_object(sb_p1);

vspeed=background_vspeed[0];
if x_dist1&gt;10 then
{
x_dist=10;
}
if x_dist1&lt;-10 then
{
x_dist=-10;
}


if y_dist1&gt;10 then
{
y_dist=10;
}
if y_dist1&lt;-10 then
{
y_dist=-10;
}

//obj_LvlControl.AvaSpeed=speed;

if y&lt;-100 instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_sprite_ext(spr_tree,0,x-x_dist*2, y-y_dist*2, .5,.5,image_angle/2,c_white,1);
draw_sprite_ext(spr_tree,1,x-x_dist, y-y_dist, .5,.5,image_angle/3,c_white,1);
draw_sprite_ext(spr_tree,2,x, y, .5,.5,image_angle/4,c_white,1);
draw_sprite_ext(spr_tree,3,x+x_dist, y+y_dist, .5,.5,image_angle/5,c_white,1);
draw_sprite_ext(spr_tree,4,x+x_dist*2, y+y_dist, .5,.5,image_angle/6,c_white,1);
*/


draw_sprite_ext(spr_tree,0,x, y, 1-size,1-size,image_angle/7,c_white,1);
draw_sprite_ext(spr_tree,1,x+x_dist, y+y_dist, 1-size,1-size,image_angle/6,c_white,1);
draw_sprite_ext(spr_tree,2,x+x_dist*2, y+y_dist*2, 1-size,1-size,image_angle/5,c_white,1);
draw_sprite_ext(spr_tree,3,x+x_dist*3, y+y_dist*3, 1-size,1-size,image_angle/4,c_white,1);
draw_sprite_ext(spr_tree,4,x+x_dist*4, y+y_dist*4, 1-size,1-size,image_angle/3,c_white,1);
draw_sprite_ext(spr_tree,5,x+x_dist*5, y+y_dist*5, 1-size,1-size,image_angle/2,c_white,1);
draw_sprite_ext(spr_tree,6,x+x_dist*6, y+y_dist*6, 1-size,1-size,image_angle/1,c_white,1);
draw_sprite_ext(spr_tree,7,x+x_dist*7, y+y_dist*7, 1-size,1-size,image_angle*2,c_white,1);

draw_text(0,0,x_dist);
draw_text(20,20,y_dist);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>125,125</point>
    <point>125,125</point>
  </PhysicsShapePoints>
</object>
